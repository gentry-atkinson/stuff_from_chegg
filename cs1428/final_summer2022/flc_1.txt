Write a definition for a function called count_odds which will return an integer. 
Your function should take an array of integers  and the integer size of the array as parameters. 
Your function should return the number of values in the array that are odd. 
To receive full credit your function must guarantee that the array will not be altered. 

#include <iostream>

using namespace std;

int count_evens(int arr[], int size){
int i, counter = 0;
for(i = 0; i < size; i++){
if(arr[i]%2 == 0){
counter++;
}
}
return counter;
}

int main(){
int arr[10] = {31,5,6,8,10,121,13,14,56,17};
int size = 10;
cout << count_evens(arr, size);

return 0;
}

#include<iostream>
using namespace std;

// defining a function to count no of even integers in the given array
int count_evens(int arr[], int n) {
	// declaring variables to store count of even number
	int count = 0;
	// looping over values in the array to check if they are even
	for(int i=0; i<n; i++) {
		// checking if the current number is even
		if(arr[i] % 2 == 0) {
			// incrementing count as we found an even number
			count += 1;
		}
	}
	// returning count to user
	return count;
}

int main() {
	// testing count_evens function
	int arr[] = {1, 2, 3, 4, 5, 6};
	cout << "No of evens in {1, 2, 3, 4, 5, 6}: " << count_evens(arr, 6) << endl;
	return 0;
}

void halfArray(int *arr,int sizeArr, int even){
//if even is true print numbers at even index
//else print the numbers at odd index
if(even){
for(int i=0;i<sizeArr;i+=2){
cout<<arr[i]<<endl;
}
}else{
for(int i=1;i<sizeArr;i+=2){
cout<<arr[i]<<endl;
}
}
}